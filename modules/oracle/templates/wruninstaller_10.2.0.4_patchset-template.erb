#!/usr/bin/bash 

EXITCODE=1

# Log a message on the output and exit properly                                                                                                                                                             
log_and_exit()                                                                                                                                                                                              
{                                                                                                                                                                                                           
    local type="$1"                                                                                                                                                                                         
    shift                                                                                                                                                                                                   
    local message="$*"                                                                                                                                                                                      
    log $type $message                                                                                                                                                                                      
    exit $EXITCODE                                                                                                                                                                                          
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
# Log a message on the output                                                                                                                                                                               
log()                                                                                                                                                                                                       
{                                                                                                                                                                                                           
    local type="$1"                                                                                                                                                                                         
    shift                                                                                                                                                                                                   
    local message="$*"                                                                                                                                                                                      
    local dataflags="+%Y.%m.%d,%H:%M:%S"                                                                                                                                                                    
                                                                                                                                                                                                            
    echo "[$type] - `date $dataflags` - $message"                                                                                                                                                           
}  

sleep 90

log "INFO" "Running the oracle silent install ./runInstaller -silent -ignoreSysPrereqs -responseFile <%= responsefile_patchset_path %>  ORACLE_HOME=\"<%= current_oracle_home %>\"  ORACLE_HOME_NAME=\"<%= oracle_patch_version %>\" n_configurationOption=3 " 

cd <%= disk1_10204_patchset_path %>
log "INFO" "Current wokring directory: `pwd`" 

log "INFO" "Stopping running processes in oracle home..."
kill_isqlplus_cmd=`/usr/ucb/ps wwwaux | grep 'app/oracle/product' | grep -v grep |awk '{print $2}' |xargs -n 1 -i kill -9 {}`
if [ $? -eq 0 ]; then
    log "INFO" "Running processes in oracle home stopped !"
else
    log_and_exit "ERROR" "Could not stopped running processes in oracle home properly: ${kill_isqlplus_cmd}"
fi

log "INFO" "Stopping isqlplus..."
kill_isqlplus_cmd=`/usr/ucb/ps wwwaux | grep 'app/oracle/product' | grep isqlplus |awk '{print $2}' |xargs -n 1 -i kill -9 {}`
if [ $? -eq 0 ]; then
    log "INFO" "isqlplus stopped !"
else
    log_and_exit "ERROR" "Could not stopped isqlplus properly: ${kill_isqlplus_cmd}"
fi

log "INFO" "Stopping oracle httpd server..."
$ORACLE_HOME/Apache/Apache/bin/apachectl stop
kill_httpd_cmd=`/usr/ucb/ps wwwaux | grep 'app/oracle/product' | grep httpd |awk '{print $2}' |xargs -n 1 -i kill -9 {}`
if [ $? -eq 0 ]; then
    log "INFO" "httpd stopped !"
else
    log_and_exit "ERROR" "Could not stopped httpd properly: ${kill_httpd_cmd}"
fi


log "INFO" "The runinstaller is starting..."
./runInstaller -silent -ignoreSysPrereqs  -responseFile <%= responsefile_patchset_path %>  ORACLE_HOME="<%= current_oracle_home %>"  ORACLE_HOME_NAME="<%= oracle_patch_version %>"   n_configurationOption=3  
log "INFO" "The runinstaller is started..."  

sleep 120
orainventory_path=<%= orainventory_path %>
oracle_install_log=`ls -lrt ${orainventory_path}/logs |grep oraInstall | grep out | tail -1 | awk '{print $9}'`
oracle_install_log_path="${orainventory_path}/logs/${oracle_install_log}"


if [ -e "${oracle_install_log_path}" ]; then                                                                                                                                                                
    log "INFO" "Found an oracle install log file: ${oracle_install_log_path}"                                                                                                                               
else                                                                                                                                                                                                        
    log_and_exit "ERROR" "Could not find an oracle install log file"                                                                                                                                        
fi

test_pad()
{
local file=$1
sleep 5
grep 'was successful' $file
if ((  $? == 0  )); then
    EXITCODE=0
    touch /var/opt/oracle/10.2.0.4_patchset_installed
    touch /var/opt/oracle/oracle_db_server_soft_installed
    log_and_exit "INFO" "You have installed 10.2.0.4 database server patch software"
else
    log "INFO" "Not yet successful..."
fi
return 1
}

while true; do
    test_pad ${oracle_install_log_path}
    sleep 5 
done
exit 0  
